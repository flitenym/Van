<controls:WindowControl x:Class="Van.View.MainWindowView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="clr-namespace:CustomControls;assembly=CustomControls"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"  
        xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz"
        xmlns:dockablz="clr-namespace:Dragablz.Dockablz;assembly=Dragablz" 
        xmlns:localViews="clr-namespace:Van.View"
        xmlns:localViewModels="clr-namespace:Van.ViewModel"
        xmlns:local="clr-namespace:Van"
        xmlns:nodes="clr-namespace:Van.Helper"
        xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        mc:Ignorable="d" FontSize="14"
        Title="Привет" Height="450" Width="800" Icon="../Images/icon.ico">

    <Window.Resources>
        <!--анимация открытия меню-->
        <Storyboard x:Key="OpenLeftMenu">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="GridLeftMenu">
                <SplineDoubleKeyFrame  KeyTime="0" Value="0"/>
                <SplineDoubleKeyFrame  KeyTime="0:0:0.3" Value="255"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <!--анимация закрытия меню-->
        <Storyboard x:Key="CloseLeftMenu">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="GridLeftMenu">
                <SplineDoubleKeyFrame  KeyTime="0" Value="255"/>
                <SplineDoubleKeyFrame  KeyTime="0:0:0.1" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <!--анимация открытия меню-->
        <Storyboard x:Key="OpenRightMenu">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="GridRightMenu">
                <SplineDoubleKeyFrame  KeyTime="0" Value="1"/>
                <SplineDoubleKeyFrame  KeyTime="0:0:0.3" Value="-255"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <!--анимация закрытия меню-->
        <Storyboard x:Key="CloseRightMenu">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="GridRightMenu">
                <SplineDoubleKeyFrame  KeyTime="0" Value="-255"/>
                <SplineDoubleKeyFrame  KeyTime="0:0:0.1" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>

    <Window.Triggers>
        <EventTrigger RoutedEvent="Grid.MouseDown" SourceName="GridButtonLeftMenu">
            <BeginStoryboard Storyboard="{StaticResource OpenLeftMenu}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Grid.MouseLeave" SourceName="GridLeftMenu">
            <BeginStoryboard Storyboard="{StaticResource CloseLeftMenu}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Grid.MouseDown" SourceName="GridButtonRightMenu">
            <BeginStoryboard Storyboard="{StaticResource OpenRightMenu}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Grid.MouseLeave" SourceName="GridRightMenu">
            <BeginStoryboard Storyboard="{StaticResource CloseRightMenu}"/>
        </EventTrigger>
    </Window.Triggers>

    <Grid>  
        <dockablz:Layout Margin="15,0,15,0">
            <dragablz:TabablzControl 
                BorderThickness="0" 
                ItemsSource="{Binding ViewModels}" 
                SelectedItem="{Binding SelectedViewModel}" 
                ClosingItemCallback="{Binding ClosingTabItemHandler}">
                <dragablz:TabablzControl.InterTabController>
                    <dragablz:InterTabController />
                </dragablz:TabablzControl.InterTabController>
                <TabControl.ContentTemplate>
                    <DataTemplate DataType="{x:Type localViewModels:TabControlViewModel}">
                        <ContentPresenter Content="{Binding ViewContent}" />
                    </DataTemplate>
                </TabControl.ContentTemplate> 
                <dragablz:TabablzControl.HeaderItemTemplate>
                    <DataTemplate DataType="{x:Type localViewModels:TabControlViewModel}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="125" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0" Margin="2">
                                <TextBlock TextAlignment="Center" Text="{Binding Name}" TextWrapping="WrapWithOverflow"/> 
                                <Thumb Style="{DynamicResource InvisibleThumbStyle}"
                                dragablz:DragablzItem.IsCustomThumb="True" />
                            </Grid> 
                            <Button Grid.Column="1" Style="{DynamicResource CustomButtonStyle}"   
                                Content="X"
                                Command="dragablz:TabablzControl.CloseItemCommand"/> 
                        </Grid>
                    </DataTemplate>
                </dragablz:TabablzControl.HeaderItemTemplate>
                <TabControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type localViewModels:TabControlViewModel}">
                        <ContentPresenter Content="{Binding ViewContent}" />
                    </DataTemplate>
                </TabControl.ItemTemplate>
            </dragablz:TabablzControl>
        </dockablz:Layout> 


        <Grid x:Name="GridButtonLeftMenu" Background="#19443939" VerticalAlignment="Stretch" HorizontalAlignment="Left" Width="15" />
        <Grid x:Name="GridButtonRightMenu" Background="#19443939" VerticalAlignment="Stretch" HorizontalAlignment="Right" Width="15" />


        <Grid x:Name="GridLeftMenu" Background="White" Width="250" HorizontalAlignment="Left" VerticalAlignment="Stretch" Margin="-256,0,0,0" >
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Grid.RenderTransform>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="1" />
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0"> 
                <Grid.RowDefinitions>
                    <RowDefinition Height="50" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="32" />
                </Grid.RowDefinitions>

                <ScrollViewer Grid.Row="1" 
                              Grid.Column="0"
                              Style="{DynamicResource SrollViewerControl}" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                    <TreeView 
                          ItemsSource="{Binding Nodes}"
                          Name="LeftMenu">
                        <TreeView.Resources>
                            <HierarchicalDataTemplate DataType="{x:Type nodes:Node}" ItemsSource="{Binding Nodes}">
                                <TextBlock Text="{Binding Path=Name}" />
                            </HierarchicalDataTemplate>
                        </TreeView.Resources>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectedItemChanged">
                                <i:InvokeCommandAction 
                                Command="{Binding SetSelectedTreeViewItem}" 
                                CommandParameter="{Binding SelectedItem, ElementName=LeftMenu}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TreeView>
                </ScrollViewer>

                <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Button Style="{StaticResource MaterialDesignIconButton}" Height="Auto" Width="32" Command="{Binding SetSettingsView}">
                        <Button.Content>
                            <materialDesign:PackIcon Kind="Settings" Foreground="{DynamicResource DarkLightForeground}"/>
                        </Button.Content>
                    </Button>
                </StackPanel> 
                
            </Grid>
            <Rectangle Grid.Column="1" Fill="White" >
                <Rectangle.Effect>
                    <DropShadowEffect BlurRadius="5" Direction="-45" ShadowDepth="2"/>
                </Rectangle.Effect>
            </Rectangle>


        </Grid>

        <Grid x:Name="GridRightMenu" Background="White" Width="250" HorizontalAlignment="Right" VerticalAlignment="Stretch" Margin="0,0,-256,0">
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Grid.RenderTransform>
        </Grid>

        <materialDesign:Snackbar HorizontalAlignment="Stretch"
                                 MessageQueue="{materialDesign:MessageQueue}" 
                                 Background="{DynamicResource MaterialDesignBackground}"
                                 Foreground="{DynamicResource MaterialDesignForeground}" 
                                 x:Name="Snackbar" 
                                 FontWeight="Bold" 
                                 ActionButtonStyle="{DynamicResource ActionButton}"/>

    </Grid>
</controls:WindowControl>
