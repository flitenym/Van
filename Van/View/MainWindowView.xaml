<controls:WindowControl x:Class="Van.View.MainWindowView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="clr-namespace:CustomControls;assembly=CustomControls"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"  
        xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz"
        xmlns:dockablz="clr-namespace:Dragablz.Dockablz;assembly=Dragablz" 
        xmlns:localViews="clr-namespace:Van.View"
        xmlns:localViewModels="clr-namespace:Van.ViewModel"
        xmlns:local="clr-namespace:Van"
        xmlns:nodes="clr-namespace:Van.Helper" 
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        mc:Ignorable="d" FontSize="14"
        Title="Анализ выживаемости"
        Height="450" Width="800" Icon="../Images/icon.ico">

    <Window.Resources>
        <!--анимация открытия меню-->
        <Storyboard x:Key="OpenLeftMenu"> 
            <DoubleAnimation Storyboard.TargetName="GridLeftMenu"
                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                             To="0"
                             Duration="0:0:0.35"> 
            </DoubleAnimation>
        </Storyboard>
        <!--анимация закрытия меню-->
        <Storyboard x:Key="CloseLeftMenu"> 
            <DoubleAnimation Storyboard.TargetName="GridLeftMenu"
                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                             To="-355"
                             Duration="0:0:0.35"> 
            </DoubleAnimation>
        </Storyboard>
        <!--анимация открытия меню-->
        <Storyboard x:Key="OpenRightMenu"> 
            <DoubleAnimation Storyboard.TargetName="GridRightMenu"
                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                             To="0"
                             Duration="0:0:0.3"> 
            </DoubleAnimation>
        </Storyboard>
        <!--анимация закрытия меню-->
        <Storyboard x:Key="CloseRightMenu">
            <DoubleAnimation Storyboard.TargetName="GridRightMenu"
                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                             To="255"
                             Duration="0:0:0.3"> 
            </DoubleAnimation>
        </Storyboard>
    </Window.Resources> 
    
    <Window.Triggers>
        <EventTrigger RoutedEvent="Grid.MouseDown" SourceName="GridButtonLeftMenu">
            <BeginStoryboard Storyboard="{StaticResource OpenLeftMenu}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Grid.MouseLeave" SourceName="GridLeftMenu">
            <BeginStoryboard Storyboard="{StaticResource CloseLeftMenu}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Grid.MouseDown" SourceName="GridButtonRightMenu">
            <BeginStoryboard Storyboard="{StaticResource OpenRightMenu}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Grid.MouseLeave" SourceName="GridRightMenu">
            <BeginStoryboard Storyboard="{StaticResource CloseRightMenu}"/>
        </EventTrigger>
    </Window.Triggers>

    <Window.InputBindings>
        <KeyBinding Key="B" Modifiers="Control"  Command="{Binding ClosingTabItemHandler}" CommandParameter="{Binding SelectedItem, ElementName=tabablzControl}"/>
    </Window.InputBindings>
    
    <Grid>
        <dockablz:Layout Margin="20,0,20,0">
            <dragablz:TabablzControl 
                Name="tabablzControl"
                BorderThickness="0" 
                ItemsSource="{Binding ViewModels}" 
                SelectedItem="{Binding SelectedViewModel}" 
                ClosingItemCallback="{Binding ClosingTabItemHandler}"> 
                <dragablz:TabablzControl.InterTabController>
                    <dragablz:InterTabController />
                </dragablz:TabablzControl.InterTabController> 
                <TabControl.ContentTemplate>
                    <DataTemplate DataType="{x:Type localViewModels:TabControlViewModel}">
                        <ContentPresenter Content="{Binding ViewContent}" />
                    </DataTemplate>
                </TabControl.ContentTemplate>
                <dragablz:TabablzControl.HeaderItemTemplate>
                    <DataTemplate DataType="{x:Type localViewModels:TabControlViewModel}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="190" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="1" />
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0" >
                                <TextBlock VerticalAlignment="Center" 
                                           HorizontalAlignment="Center" 
                                           TextAlignment="Center" 
                                           Text="{Binding Name}" 
                                           IsHyphenationEnabled="True"
                                           Style="{StaticResource MaterialDesignTitleTextBlock}"
                                           TextWrapping="Wrap"/>
                                <Thumb Style="{DynamicResource InvisibleThumbStyle}" dragablz:DragablzItem.IsCustomThumb="True"  Height="80" />
                            </Grid>
                            <Button VerticalAlignment="Center" 
                                    HorizontalAlignment="Right" 
                                    Grid.Column="1"
                                    Style="{DynamicResource CustomButtonStyle}"    
                                    Command="dragablz:TabablzControl.CloseItemCommand"> 
                                <Button.Content>
                                    <materialDesign:PackIcon Kind="Close" />
                                </Button.Content>
                            </Button>
                        </Grid>
                    </DataTemplate>
                </dragablz:TabablzControl.HeaderItemTemplate>
                <TabControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type localViewModels:TabControlViewModel}">
                        <ContentPresenter Content="{Binding ViewContent}" />
                    </DataTemplate>
                </TabControl.ItemTemplate>
            </dragablz:TabablzControl>
        </dockablz:Layout>

        <Grid x:Name="GridButtonLeftMenu" Background="#19443939" VerticalAlignment="Stretch" HorizontalAlignment="Left" Width="20">
            <materialDesign:PackIcon VerticalAlignment="Center" Kind="ChevronRight" Foreground="{DynamicResource DarkLightForeground}"/>
        </Grid>
        <Grid x:Name="GridButtonRightMenu" Background="#19443939" VerticalAlignment="Stretch" HorizontalAlignment="Right" Width="20" >
            <materialDesign:PackIcon VerticalAlignment="Center" Kind="ChevronLeft" Foreground="{DynamicResource DarkLightForeground}"/>
        </Grid>


        <Grid x:Name="GridLeftMenu" Background="White" Width="350" HorizontalAlignment="Left" VerticalAlignment="Stretch">
            <Grid.RenderTransform>
                <TranslateTransform X="-355"/>
            </Grid.RenderTransform> 
            <Grid.RowDefinitions>
                <RowDefinition Height="50" />
                <RowDefinition Height="*" />
                <RowDefinition Height="32" />
            </Grid.RowDefinitions>
                <TreeView Grid.Row="1"
                          ScrollViewer.CanContentScroll="True"
                          ScrollViewer.HorizontalScrollBarVisibility="Auto"
                          ScrollViewer.VerticalScrollBarVisibility="Auto"
                          Style="{DynamicResource TreeViewStyle}"
                          ItemsSource="{Binding LeftMenuNodes}"
                          Name="LeftMenu" >
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource MaterialDesignTreeViewItem}">
                        <Setter Property="IsSelected" Value="{Binding Selected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <Setter Property="IsExpanded" Value="{Binding Expanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" /> 
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.Resources>
                        <HierarchicalDataTemplate DataType="{x:Type nodes:Node}" ItemsSource="{Binding Nodes}">
                            <TextBlock Width="150" Text="{Binding Path=Name}" 
                                           IsHyphenationEnabled="True"
                                           TextWrapping="Wrap" />
                        </HierarchicalDataTemplate>
                    </TreeView.Resources>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectedItemChanged">
                        <i:InvokeCommandAction 
                                Command="{Binding SetSelectedTreeViewItem}" 
                                CommandParameter="{Binding SelectedItem, ElementName=LeftMenu}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TreeView>

                <StackPanel Grid.Row="2" 
                            Orientation="Horizontal" 
                            HorizontalAlignment="Stretch" 
                            VerticalAlignment="Stretch">
                    <Button Style="{StaticResource MaterialDesignIconButton}" Height="Auto" Width="32" Command="{Binding SetSettingsView}">
                        <Button.Content>
                            <materialDesign:PackIcon Kind="Settings" Foreground="{DynamicResource DarkLightForeground}"/>
                        </Button.Content>
                    </Button>
                </StackPanel> 
        </Grid>
        

        <Grid x:Name="GridRightMenu" Background="White" Width="250" HorizontalAlignment="Right" VerticalAlignment="Stretch">
            <Grid.RenderTransform>
                <TranslateTransform X="255"/>
            </Grid.RenderTransform> 
 
                <Grid.RowDefinitions>
                    <RowDefinition Height="50" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="32" />
                </Grid.RowDefinitions>
                <TreeView Grid.Row="1"  
                          ItemsSource="{Binding RightMenuNodes}"
                          ScrollViewer.CanContentScroll="True"
                          ScrollViewer.HorizontalScrollBarVisibility="Auto"
                          ScrollViewer.VerticalScrollBarVisibility="Auto"
                          Style="{DynamicResource TreeViewStyle}"
                          Name="RightMenu">
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource MaterialDesignTreeViewItem}">
                        <Setter Property="IsSelected" Value="{Binding Selected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <Setter Property="IsExpanded" Value="{Binding Expanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.Resources>
                        <HierarchicalDataTemplate DataType="{x:Type nodes:Node}" ItemsSource="{Binding Nodes}">
                            <TextBlock Width="150" Text="{Binding Path=Name}" 
                                           IsHyphenationEnabled="True"
                                           TextWrapping="Wrap" />
                        </HierarchicalDataTemplate>
                    </TreeView.Resources>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectedItemChanged">
                            <i:InvokeCommandAction 
                                Command="{Binding SetSelectedTreeViewItem}" 
                                CommandParameter="{Binding SelectedItem, ElementName=RightMenu}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TreeView>  

        </Grid>

        <materialDesign:Snackbar HorizontalAlignment="Stretch"  
                                 MessageQueue="{Binding IsMessagePanelContent}"  
                                 x:Name="Snackbar" 
                                 Background="{DynamicResource MaterialDesignBackground}"
                                 Foreground="{DynamicResource MaterialDesignForeground}"  
                                 ActionButtonStyle="{DynamicResource MaterialDesignFlatButton}"  />

    </Grid>
</controls:WindowControl>
