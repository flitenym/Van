<controls:WindowControl x:Class="Van.Windows.View.MainWindowView"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
            xmlns:controls="clr-namespace:Van.Controls"
            xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"  
            xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz"
            xmlns:dockablz="clr-namespace:Dragablz.Dockablz;assembly=Dragablz"
            xmlns:localViewModels="clr-namespace:Van.Helper.Classes"
            xmlns:nodes="clr-namespace:Van.Helper.Classes" 
            xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
            mc:Ignorable="d" FontSize="14"
            WindowStartupLocation="CenterScreen"
            Height="720" Width="1024" Icon="../../Images/icon.ico"
            Foreground="{DynamicResource WindowForeground}"
        >

    <Window.Resources>
        <!--анимация открытия меню-->
        <Storyboard x:Key="OpenLeftMenu" Timeline.DesiredFrameRate="60">
            <DoubleAnimation Storyboard.TargetName="GridLeftMenu"
                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                             To="0"
                             Duration="0:0:0.35">
            </DoubleAnimation>
        </Storyboard>
        <!--анимация закрытия меню-->
        <Storyboard x:Key="CloseLeftMenu"  Timeline.DesiredFrameRate="60">
            <DoubleAnimation Storyboard.TargetName="GridLeftMenu"
                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                             To="-355"
                             Duration="0:0:0.35">
            </DoubleAnimation>
        </Storyboard>
        <!--анимация открытия меню-->
        <Storyboard x:Key="OpenRightMenu"  Timeline.DesiredFrameRate="60">
            <DoubleAnimation Storyboard.TargetName="GridRightMenu"
                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                             To="0"
                             Duration="0:0:0.3">
            </DoubleAnimation>
        </Storyboard>
        <!--анимация закрытия меню-->
        <Storyboard x:Key="CloseRightMenu" Timeline.DesiredFrameRate="60">
            <DoubleAnimation Storyboard.TargetName="GridRightMenu"
                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                             To="255"
                             Duration="0:0:0.3">
            </DoubleAnimation>
        </Storyboard>
        <!--анимация иконки-->
        <Storyboard x:Key="IconAnimationFirst" RepeatBehavior="Forever">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="line">
                <EasingColorKeyFrame KeyTime="0:0:0" Value="Transparent"/>
                <EasingColorKeyFrame KeyTime="0:0:1" Value="#FF00A2FF"/>
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="line">
                <EasingColorKeyFrame KeyTime="0:0:1" Value="Transparent"/>
                <EasingColorKeyFrame KeyTime="0:0:2" Value="#FF00A2FF"/>
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="line">
                <EasingColorKeyFrame KeyTime="0:0:4" Value="#FF00A2FF"/>
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="line">
                <EasingColorKeyFrame KeyTime="0:0:5" Value="#FF00A2FF"/>
                <EasingColorKeyFrame KeyTime="0:0:6" Value="Transparent"/>
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="line">
                <EasingColorKeyFrame KeyTime="0:0:6" Value="#FF00A2FF"/>
                <EasingColorKeyFrame KeyTime="0:0:7" Value="Transparent"/>
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames BeginTime="0:0:7" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="line">
                <EasingColorKeyFrame KeyTime="0:0:2" Value="Transparent"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="IconAnimationSecond" BeginTime="0:0:2" RepeatBehavior="Forever">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="line1">
                <EasingColorKeyFrame KeyTime="0:0:0" Value="Transparent"/>
                <EasingColorKeyFrame KeyTime="0:0:1" Value="#FF00A2FF"/>
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="line1">
                <EasingColorKeyFrame KeyTime="0:0:1" Value="Transparent"/>
                <EasingColorKeyFrame KeyTime="0:0:2" Value="#FF00A2FF"/>
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="line1">
                <EasingColorKeyFrame KeyTime="0:0:4" Value="#FF00A2FF"/>
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="line1">
                <EasingColorKeyFrame KeyTime="0:0:5" Value="#FF00A2FF"/>
                <EasingColorKeyFrame KeyTime="0:0:6" Value="Transparent"/>
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="line1">
                <EasingColorKeyFrame KeyTime="0:0:6" Value="#FF00A2FF"/>
                <EasingColorKeyFrame KeyTime="0:0:7" Value="Transparent"/>
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames BeginTime="0:0:7" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="line1">
                <EasingColorKeyFrame KeyTime="0:0:2" Value="Transparent"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>
    
    <Window.Triggers>
        <EventTrigger RoutedEvent="Grid.MouseDown" SourceName="GridButtonLeftMenu">
            <BeginStoryboard Storyboard="{StaticResource OpenLeftMenu}"/>
            <BeginStoryboard Storyboard="{StaticResource IconAnimationFirst}"/>
            <BeginStoryboard Storyboard="{StaticResource IconAnimationSecond}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Grid.MouseLeave" SourceName="GridLeftMenu">
            <BeginStoryboard Storyboard="{StaticResource CloseLeftMenu}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Grid.MouseDown" SourceName="GridButtonRightMenu">
            <BeginStoryboard Storyboard="{StaticResource OpenRightMenu}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Grid.MouseLeave" SourceName="GridRightMenu">
            <BeginStoryboard Storyboard="{StaticResource CloseRightMenu}"/>
        </EventTrigger>
    </Window.Triggers>

    <Grid>
        <dockablz:Layout Margin="20,0,20,0">
            <dragablz:TabablzControl 
                Name="tabablzControl"
                BorderThickness="0"
                ItemsSource="{Binding ViewModels}" 
                SelectedItem="{Binding SelectedViewModel}" 
                OverridesDefaultStyle="False"
                ClosingItemCallback="{Binding ClosingTabItemHandler}"> 
                <dragablz:TabablzControl.InterTabController>
                    <dragablz:InterTabController />
                </dragablz:TabablzControl.InterTabController> 
                <TabControl.ContentTemplate>
                    <DataTemplate DataType="{x:Type localViewModels:TabControlData}">
                        <ContentPresenter Content="{Binding ViewContent}" />
                    </DataTemplate>
                </TabControl.ContentTemplate>
                <dragablz:TabablzControl.HeaderItemTemplate> 
                        <DataTemplate DataType="{x:Type localViewModels:TabControlData}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="190" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="1" />
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0" >
                                <TextBlock VerticalAlignment="Center" 
                                           HorizontalAlignment="Center" 
                                           TextAlignment="Center" 
                                           Text="{Binding Name}" 
                                           IsHyphenationEnabled="True"
                                           Style="{DynamicResource MaterialDesignTitleTextBlock}"
                                           TextWrapping="Wrap"/>
                                <Thumb dragablz:DragablzItem.IsCustomThumb="True" Height="80" />
                                <Grid.InputBindings>
                                    <MouseBinding MouseAction="MiddleClick" Command="dragablz:TabablzControl.CloseItemCommand"/>
                                </Grid.InputBindings>
                            </Grid>  
                            <Button VerticalAlignment="Center" 
                                    HorizontalAlignment="Right" 
                                    Grid.Column="1"
                                    Style="{DynamicResource CustomButtonStyle}"    
                                    Command="dragablz:TabablzControl.CloseItemCommand"> 
                                <Button.Content>
                                    <materialDesign:PackIcon Kind="Close" />
                                </Button.Content>
                            </Button>
                        </Grid>
                    </DataTemplate>
                </dragablz:TabablzControl.HeaderItemTemplate>
                <TabControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type localViewModels:TabControlData}">
                        <ContentPresenter Content="{Binding ViewContent}" />
                    </DataTemplate>
                </TabControl.ItemTemplate>
            </dragablz:TabablzControl>
        </dockablz:Layout>

        <Grid x:Name="GridButtonLeftMenu" Background="{DynamicResource LeftRightMenuBackGround}" VerticalAlignment="Stretch" HorizontalAlignment="Left" Width="22">
            <materialDesign:PackIcon VerticalAlignment="Center" Width="22" Height="Auto" Kind="PageLast" Foreground="{DynamicResource WindowForeground}"/>
        </Grid>
        <Grid x:Name="GridButtonRightMenu" Background="{DynamicResource LeftRightMenuBackGround}" VerticalAlignment="Stretch" HorizontalAlignment="Right" Width="22" >
            <materialDesign:PackIcon VerticalAlignment="Center" Width="22" Height="Auto" Kind="PageFirst" Foreground="{DynamicResource WindowForeground}"/>
        </Grid>


        <Grid x:Name="GridLeftMenu" Background="{DynamicResource LeftRightMenuBackGround}" Width="350" HorizontalAlignment="Left" VerticalAlignment="Stretch">
            <Grid.RenderTransform>
                <TranslateTransform X="-355"/>
            </Grid.RenderTransform>
            <Grid.RowDefinitions>
                <RowDefinition Height="60" />
                <RowDefinition Height="*" />
                <RowDefinition Height="32" />
                <RowDefinition Height="5" />
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Margin="0,0,0,10" Orientation="Horizontal">
                <Canvas Margin="135,0,-6,2" Width="40" Height="40" HorizontalAlignment="Center" VerticalAlignment="Bottom">
                    <Line x:Name="line" X1="0" Y1="0" X2="20" Y2="40" StrokeThickness="3" StrokeStartLineCap="Round" StrokeEndLineCap="Round">
                        <Line.Stroke>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="Transparent" Offset="0"/>
                                <GradientStop Offset="1"/>
                            </LinearGradientBrush>
                        </Line.Stroke>
                    </Line>
                    <Line x:Name="line1" X1="20" Y1="40" X2="40" Y2="0" StrokeThickness="3" StrokeStartLineCap="Round" StrokeEndLineCap="Round">
                        <Line.Stroke>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="Transparent" Offset="0"/>
                                <GradientStop Offset="1"/>
                            </LinearGradientBrush>
                        </Line.Stroke>
                    </Line>
                </Canvas>
                <Label Content="an" Width="40" Height="40" FontSize="40" Padding="0" VerticalAlignment="Bottom" FontFamily="Corbel Light"/>
            </StackPanel>
            <TreeView Grid.Row="1"
                          ScrollViewer.CanContentScroll="True"
                          ScrollViewer.HorizontalScrollBarVisibility="Auto"
                          ScrollViewer.VerticalScrollBarVisibility="Auto" 
                          Margin="0,0,10,0"
                          ItemsSource="{Binding LeftMenuNodes}"
                          Name="LeftMenu" >
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource MaterialDesignTreeViewItem}">
                        <Setter Property="IsSelected" Value="{Binding Selected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <Setter Property="IsExpanded" Value="{Binding Expanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type nodes:Node}" ItemsSource="{Binding Nodes}">
                        <TextBlock Width="150" Text="{Binding Path=Name}" 
                                           IsHyphenationEnabled="True"
                                           TextWrapping="Wrap" />
                    </HierarchicalDataTemplate>
                </TreeView.Resources>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectedItemChanged">
                        <i:InvokeCommandAction 
                                Command="{Binding SetSelectedTreeViewItem}" 
                                CommandParameter="{Binding SelectedItem, ElementName=LeftMenu}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TreeView>
            <StackPanel Grid.Row="2" 
                            Orientation="Horizontal" 
                            HorizontalAlignment="Stretch" 
                            VerticalAlignment="Stretch" Margin="5,0,0,0">
                <Button Style="{DynamicResource ButtonZoom}" 
                        Height="Auto" 
                        Width="Auto" 
                        ToolTip="Настройки"
                        ToolTipService.Placement="Top"
                        Command="{Binding SetSettingsView}">
                    <Button.Content>
                        <materialDesign:PackIcon Kind="Settings" Width="Auto" Height="28" Foreground="{DynamicResource PreWindowButtonForeground}"/>
                    </Button.Content>
                </Button>
            </StackPanel>
        </Grid>


        <Grid x:Name="GridRightMenu" Background="{DynamicResource LeftRightMenuBackGround}" Width="250" HorizontalAlignment="Right" VerticalAlignment="Stretch">
            <Grid.RenderTransform>
                <TranslateTransform X="255"/>
            </Grid.RenderTransform> 
            <Grid.RowDefinitions>
                <RowDefinition Height="50" />
                <RowDefinition Height="*" />
                <RowDefinition Height="32" />
            </Grid.RowDefinitions>
            <TreeView Grid.Row="1"  
                      ItemsSource="{Binding RightMenuNodes}"
                      ScrollViewer.CanContentScroll="True"
                      ScrollViewer.HorizontalScrollBarVisibility="Auto"
                      ScrollViewer.VerticalScrollBarVisibility="Auto" 
                      Name="RightMenu">
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource MaterialDesignTreeViewItem}">
                        <Setter Property="IsSelected" Value="{Binding Selected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <Setter Property="IsExpanded" Value="{Binding Expanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type nodes:Node}" ItemsSource="{Binding Nodes}">
                        <TextBlock Width="180" Text="{Binding Path=Name}" 
                                           IsHyphenationEnabled="True"
                                           TextWrapping="Wrap" />
                    </HierarchicalDataTemplate>
                </TreeView.Resources>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectedItemChanged">
                        <i:InvokeCommandAction 
                                Command="{Binding SetSelectedTreeViewItem}" 
                                CommandParameter="{Binding SelectedItem, ElementName=RightMenu}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TreeView>
        </Grid>

        <materialDesign:Snackbar HorizontalAlignment="Stretch"  
                                 MessageQueue="{Binding IsMessagePanelContent}"  
                                 x:Name="Snackbar" 
                                 Background="{DynamicResource SnackBarBackGround}"
                                 Foreground="{DynamicResource WindowForeground}"  
                                 ActionButtonStyle="{DynamicResource MaterialDesignFlatButton}"  />

        <Grid x:Name="GridLoading" VerticalAlignment="Bottom" Height="5" Background="Black">
            <Grid.RenderTransform>
                <TranslateTransform Y="5"/>
            </Grid.RenderTransform>
            <Grid.Style>
                <Style>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=IsLoadingPanelVisible}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard Timeline.DesiredFrameRate="60">
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" To="0" Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard Timeline.DesiredFrameRate="60">
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" To="5" Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <ProgressBar IsIndeterminate="True" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Height="5"/>
        </Grid>
        
    </Grid>
</controls:WindowControl>
