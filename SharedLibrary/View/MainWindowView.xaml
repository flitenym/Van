<controls:WindowControl
    x:Class="SharedLibrary.View.MainWindowView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:SharedLibrary.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dockablz="clr-namespace:Dragablz.Dockablz;assembly=Dragablz"
    xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:nodes="clr-namespace:SharedLibrary.Helper.Classes"
    Width="1024"
    Height="720"
    FontSize="14"
    Foreground="{DynamicResource WindowForeground}" 
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">

    <Window.Resources>
        <!--  анимация открытия меню  -->
        <Storyboard x:Key="OpenLeftMenu" Timeline.DesiredFrameRate="60">
            <DoubleAnimation
                Storyboard.TargetName="GridLeftMenu"
                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                To="0"
                Duration="0:0:0.35" />
        </Storyboard>
        <!--  анимация закрытия меню  -->
        <Storyboard x:Key="CloseLeftMenu" Timeline.DesiredFrameRate="60">
            <DoubleAnimation
                Storyboard.TargetName="GridLeftMenu"
                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                To="-355"
                Duration="0:0:0.35" />
        </Storyboard>
        <!--  анимация открытия меню  -->
        <Storyboard x:Key="OpenRightMenu" Timeline.DesiredFrameRate="60">
            <DoubleAnimation
                Storyboard.TargetName="GridRightMenu"
                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                To="0"
                Duration="0:0:0.3" />
        </Storyboard>
        <!--  анимация закрытия меню  -->
        <Storyboard x:Key="CloseRightMenu" Timeline.DesiredFrameRate="60">
            <DoubleAnimation
                Storyboard.TargetName="GridRightMenu"
                Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                To="255"
                Duration="0:0:0.3" />
        </Storyboard>
        <!--  анимация иконки  -->
        <Storyboard x:Key="IconAnimationFirst" RepeatBehavior="Forever">
            <ColorAnimationUsingKeyFrames Storyboard.TargetName="line" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                <EasingColorKeyFrame KeyTime="0:0:0" Value="Transparent" />
                <EasingColorKeyFrame KeyTime="0:0:1" Value="#FF00A2FF" />
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetName="line" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                <EasingColorKeyFrame KeyTime="0:0:1" Value="Transparent" />
                <EasingColorKeyFrame KeyTime="0:0:2" Value="#FF00A2FF" />
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetName="line" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                <EasingColorKeyFrame KeyTime="0:0:4" Value="#FF00A2FF" />
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetName="line" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                <EasingColorKeyFrame KeyTime="0:0:5" Value="#FF00A2FF" />
                <EasingColorKeyFrame KeyTime="0:0:6" Value="Transparent" />
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetName="line" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                <EasingColorKeyFrame KeyTime="0:0:6" Value="#FF00A2FF" />
                <EasingColorKeyFrame KeyTime="0:0:7" Value="Transparent" />
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames
                BeginTime="0:0:7"
                Storyboard.TargetName="line"
                Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                <EasingColorKeyFrame KeyTime="0:0:2" Value="Transparent" />
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard
            x:Key="IconAnimationSecond"
            BeginTime="0:0:2"
            RepeatBehavior="Forever">
            <ColorAnimationUsingKeyFrames Storyboard.TargetName="line1" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                <EasingColorKeyFrame KeyTime="0:0:0" Value="Transparent" />
                <EasingColorKeyFrame KeyTime="0:0:1" Value="#FF00A2FF" />
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetName="line1" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                <EasingColorKeyFrame KeyTime="0:0:1" Value="Transparent" />
                <EasingColorKeyFrame KeyTime="0:0:2" Value="#FF00A2FF" />
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetName="line1" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                <EasingColorKeyFrame KeyTime="0:0:4" Value="#FF00A2FF" />
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetName="line1" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                <EasingColorKeyFrame KeyTime="0:0:5" Value="#FF00A2FF" />
                <EasingColorKeyFrame KeyTime="0:0:6" Value="Transparent" />
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetName="line1" Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                <EasingColorKeyFrame KeyTime="0:0:6" Value="#FF00A2FF" />
                <EasingColorKeyFrame KeyTime="0:0:7" Value="Transparent" />
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames
                BeginTime="0:0:7"
                Storyboard.TargetName="line1"
                Storyboard.TargetProperty="(Shape.Stroke).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                <EasingColorKeyFrame KeyTime="0:0:2" Value="Transparent" />
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>

    <Window.Triggers>
        <EventTrigger RoutedEvent="Grid.MouseDown" SourceName="GridButtonLeftMenu">
            <BeginStoryboard Storyboard="{StaticResource OpenLeftMenu}" />
            <BeginStoryboard Storyboard="{StaticResource IconAnimationFirst}" />
            <BeginStoryboard Storyboard="{StaticResource IconAnimationSecond}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="Grid.MouseLeave" SourceName="GridLeftMenu">
            <BeginStoryboard Storyboard="{StaticResource CloseLeftMenu}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="Grid.MouseDown" SourceName="GridButtonRightMenu">
            <BeginStoryboard Storyboard="{StaticResource OpenRightMenu}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="Grid.MouseLeave" SourceName="GridRightMenu">
            <BeginStoryboard Storyboard="{StaticResource CloseRightMenu}" />
        </EventTrigger>
    </Window.Triggers>

    <Grid>
        <dockablz:Layout Margin="20,0,20,0">
            <dragablz:TabablzControl
                Name="tabablzControl"
                BorderThickness="0"
                ClosingItemCallback="{Binding ClosingTabItemHandler}"
                ItemsSource="{Binding ViewModels}"
                OverridesDefaultStyle="False"
                SelectedItem="{Binding SelectedViewModel}">
                <dragablz:TabablzControl.InterTabController>
                    <dragablz:InterTabController />
                </dragablz:TabablzControl.InterTabController>
                <TabControl.ContentTemplate>
                    <DataTemplate DataType="{x:Type nodes:TabControlData}">
                        <ContentPresenter Content="{Binding ViewContent}" />
                    </DataTemplate>
                </TabControl.ContentTemplate>
                <dragablz:TabablzControl.HeaderItemTemplate>
                    <DataTemplate DataType="{x:Type nodes:TabControlData}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="190" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="1" />
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0">
                                <TextBlock
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    IsHyphenationEnabled="True"
                                    Style="{DynamicResource MaterialDesignTitleTextBlock}"
                                    Text="{Binding Name}"
                                    TextAlignment="Center"
                                    TextWrapping="Wrap" />
                                <Thumb Height="80" dragablz:DragablzItem.IsCustomThumb="True" />
                                <Grid.InputBindings>
                                    <MouseBinding Command="dragablz:TabablzControl.CloseItemCommand" MouseAction="MiddleClick" />
                                </Grid.InputBindings>
                            </Grid>
                            <Button
                                Grid.Column="1"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Command="dragablz:TabablzControl.CloseItemCommand"
                                Style="{DynamicResource CustomButtonStyle}">
                                <Button.Content>
                                    <materialDesign:PackIcon Kind="Close" />
                                </Button.Content>
                            </Button>
                        </Grid>
                    </DataTemplate>
                </dragablz:TabablzControl.HeaderItemTemplate>
                <TabControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type nodes:TabControlData}">
                        <ContentPresenter Content="{Binding ViewContent}" />
                    </DataTemplate>
                </TabControl.ItemTemplate>
            </dragablz:TabablzControl>
        </dockablz:Layout>

        <Grid
            x:Name="GridButtonLeftMenu"
            Width="22"
            HorizontalAlignment="Left"
            VerticalAlignment="Stretch"
            Background="{DynamicResource LeftRightMenuBackGround}">
            <materialDesign:PackIcon
                Width="22"
                Height="Auto"
                VerticalAlignment="Center"
                Foreground="{DynamicResource WindowForeground}"
                Kind="PageLast" />
        </Grid>
        <Grid
            x:Name="GridButtonRightMenu"
            Width="22"
            HorizontalAlignment="Right"
            VerticalAlignment="Stretch"
            Background="{DynamicResource LeftRightMenuBackGround}">
            <materialDesign:PackIcon
                Width="22"
                Height="Auto"
                VerticalAlignment="Center"
                Foreground="{DynamicResource WindowForeground}"
                Kind="PageFirst" />
        </Grid>


        <Grid
            x:Name="GridLeftMenu"
            Width="350"
            HorizontalAlignment="Left"
            VerticalAlignment="Stretch"
            Background="{DynamicResource LeftRightMenuBackGround}">
            <Grid.RenderTransform>
                <TranslateTransform X="-355" />
            </Grid.RenderTransform>
            <Grid.RowDefinitions>
                <RowDefinition Height="60" />
                <RowDefinition Height="*" />
                <RowDefinition Height="32" />
                <RowDefinition Height="5" />
            </Grid.RowDefinitions>
            <StackPanel
                Grid.Row="0"
                Margin="0,0,0,10"
                Orientation="Horizontal">
                <Canvas
                    Width="40"
                    Height="40"
                    Margin="135,0,-6,2"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Bottom">
                    <Line
                        x:Name="line"
                        StrokeEndLineCap="Round"
                        StrokeStartLineCap="Round"
                        StrokeThickness="3"
                        X1="0"
                        X2="20"
                        Y1="0"
                        Y2="40">
                        <Line.Stroke>
                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                <GradientStop Offset="0" Color="Transparent" />
                                <GradientStop Offset="1" />
                            </LinearGradientBrush>
                        </Line.Stroke>
                    </Line>
                    <Line
                        x:Name="line1"
                        StrokeEndLineCap="Round"
                        StrokeStartLineCap="Round"
                        StrokeThickness="3"
                        X1="20"
                        X2="40"
                        Y1="40"
                        Y2="0">
                        <Line.Stroke>
                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                <GradientStop Offset="0" Color="Transparent" />
                                <GradientStop Offset="1" />
                            </LinearGradientBrush>
                        </Line.Stroke>
                    </Line>
                </Canvas>
                <Label
                    Width="40"
                    Height="40"
                    Padding="0"
                    VerticalAlignment="Bottom"
                    Content="an"
                    FontFamily="Corbel Light"
                    FontSize="40" />
            </StackPanel>
            <TreeView
                Name="LeftMenu"
                Grid.Row="1"
                Margin="0,0,10,0"
                ItemsSource="{Binding LeftMenuNodes}"
                ScrollViewer.CanContentScroll="True"
                ScrollViewer.HorizontalScrollBarVisibility="Auto"
                ScrollViewer.VerticalScrollBarVisibility="Auto">
                <TreeView.ItemContainerStyle>
                    <Style BasedOn="{StaticResource MaterialDesignTreeViewItem}" TargetType="{x:Type TreeViewItem}">
                        <Setter Property="IsSelected" Value="{Binding Selected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <Setter Property="IsExpanded" Value="{Binding Expanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type nodes:Node}" ItemsSource="{Binding Nodes}">
                        <TextBlock
                            Width="150"
                            IsHyphenationEnabled="True"
                            Text="{Binding Path=Name}"
                            TextWrapping="Wrap" />
                    </HierarchicalDataTemplate>
                </TreeView.Resources>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectedItemChanged">
                        <i:InvokeCommandAction Command="{Binding SetSelectedTreeViewItem}" CommandParameter="{Binding SelectedItem, ElementName=LeftMenu}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TreeView>
            <StackPanel
                Grid.Row="2"
                Margin="5,0,0,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Orientation="Horizontal">
                <Button
                    Width="Auto"
                    Height="Auto"
                    Command="{Binding SetSettingsView}"
                    Style="{DynamicResource ButtonZoom}"
                    ToolTip="Настройки"
                    ToolTipService.Placement="Top">
                    <Button.Content>
                        <materialDesign:PackIcon
                            Width="Auto"
                            Height="28"
                            Foreground="{DynamicResource PreWindowButtonForeground}"
                            Kind="Settings" />
                    </Button.Content>
                </Button>
            </StackPanel>
        </Grid>


        <Grid
            x:Name="GridRightMenu"
            Width="250"
            HorizontalAlignment="Right"
            VerticalAlignment="Stretch"
            Background="{DynamicResource LeftRightMenuBackGround}">
            <Grid.RenderTransform>
                <TranslateTransform X="255" />
            </Grid.RenderTransform>
            <Grid.RowDefinitions>
                <RowDefinition Height="50" />
                <RowDefinition Height="*" />
                <RowDefinition Height="32" />
            </Grid.RowDefinitions>
            <TreeView
                Name="RightMenu"
                Grid.Row="1"
                ItemsSource="{Binding RightMenuNodes}"
                ScrollViewer.CanContentScroll="True"
                ScrollViewer.HorizontalScrollBarVisibility="Auto"
                ScrollViewer.VerticalScrollBarVisibility="Auto">
                <TreeView.ItemContainerStyle>
                    <Style BasedOn="{StaticResource MaterialDesignTreeViewItem}" TargetType="{x:Type TreeViewItem}">
                        <Setter Property="IsSelected" Value="{Binding Selected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <Setter Property="IsExpanded" Value="{Binding Expanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type nodes:Node}" ItemsSource="{Binding Nodes}">
                        <TextBlock
                            Width="180"
                            IsHyphenationEnabled="True"
                            Text="{Binding Path=Name}"
                            TextWrapping="Wrap" />
                    </HierarchicalDataTemplate>
                </TreeView.Resources>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectedItemChanged">
                        <i:InvokeCommandAction Command="{Binding SetSelectedTreeViewItem}" CommandParameter="{Binding SelectedItem, ElementName=RightMenu}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TreeView>
        </Grid>

        <materialDesign:Snackbar
            x:Name="Snackbar"
            HorizontalAlignment="Stretch"
            ActionButtonStyle="{DynamicResource MaterialDesignFlatButton}"
            Background="{DynamicResource SnackBarBackGround}"
            Foreground="{DynamicResource WindowForeground}"
            MessageQueue="{Binding IsMessagePanelContent}" />

        <Grid
            x:Name="GridLoading"
            Height="5"
            VerticalAlignment="Bottom"
            Background="Black">
            <Grid.RenderTransform>
                <TranslateTransform Y="5" />
            </Grid.RenderTransform>
            <Grid.Style>
                <Style>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=IsLoadingPanelVisible}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard Timeline.DesiredFrameRate="60">
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                            To="0"
                                            Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard Timeline.DesiredFrameRate="60">
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                            To="5"
                                            Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <ProgressBar
                Height="5"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                IsIndeterminate="True" />
        </Grid>

    </Grid>
</controls:WindowControl>
