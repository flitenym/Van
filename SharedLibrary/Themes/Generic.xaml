<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:control="clr-namespace:SharedLibrary.Controls"
    xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz"
    xmlns:dragablzTheme="clr-namespace:Dragablz.Themes;assembly=Dragablz"
    xmlns:shell="clr-namespace:System.Windows.Shell;assembly=PresentationFramework">

    <!--  Button style  -->
    <Style x:Key="WindowButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        x:Name="Chrome"
                        Margin="0"
                        BorderBrush="Black"
                        SnapsToDevicePixels="True">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource AfterWindowButtonBackground}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{DynamicResource PreWindowButtonBackground}" />
        <Setter Property="FontFamily" Value="Webdings" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Foreground" Value="{DynamicResource PreWindowButtonForeground}" />
        <Setter Property="Width" Value="25" />
        <Setter Property="Margin" Value="0,2,1,0" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource AfterWindowButtonForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="WindowButtonCloseStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        x:Name="Chrome"
                        Margin="0"
                        BorderBrush="Black"
                        SnapsToDevicePixels="True">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource AfterCloseWindowButtonBackground}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{DynamicResource PreWindowButtonBackground}" />
        <Setter Property="FontFamily" Value="Webdings" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Foreground" Value="{DynamicResource PreWindowButtonForeground}" />
        <Setter Property="Width" Value="25" />
        <Setter Property="Margin" Value="0,2,1,0" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource AfterCloseWindowButtonForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Window style  -->
    <Style TargetType="{x:Type control:WindowControl}">
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
        <Setter Property="Background" Value="{DynamicResource WindowBackground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome
                    CaptionHeight="0"
                    CornerRadius="0"
                    GlassFrameThickness="1"
                    NonClientFrameEdges="None"
                    ResizeBorderThickness="5"
                    UseAeroCaptionButtons="False" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type control:WindowControl}">
                    <Border
                        x:Name="PART_WindowBorder"
                        Background="{DynamicResource WindowBackground}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <!--<Image Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Icon}"
                                        VerticalAlignment="Center" HorizontalAlignment="Left"
                                        Margin="8,0,0,0"
                                        Width="20"
                                        Height="20"/>-->
                                <TextBlock
                                    x:Name="titleTextBlock"
                                    Margin="10,0,0,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Title}" />

                                <Rectangle
                                    x:Name="moveRectangle"
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Fill="Transparent" />

                                <StackPanel
                                    x:Name="buttonsStackPanel"
                                    Grid.Row="0"
                                    Grid.Column="1"
                                    Margin="0,0,4,0"
                                    Orientation="Horizontal">
                                    <Button
                                        x:Name="minimizeButton"
                                        Content="0"
                                        Style="{StaticResource WindowButtonStyle}" />
                                    <Button x:Name="restoreButton" Style="{StaticResource WindowButtonStyle}" />
                                    <Button
                                        x:Name="closeButton"
                                        Content="r"
                                        Style="{StaticResource WindowButtonCloseStyle}" />
                                </StackPanel>

                                <Grid
                                    x:Name="gridResult"
                                    Grid.Row="1"
                                    Grid.ColumnSpan="2"
                                    Margin="5,2,5,5"
                                    Background="{TemplateBinding Background}">
                                    <AdornerDecorator>
                                        <ContentPresenter />
                                    </AdornerDecorator>
                                </Grid>
                            </Grid>

                            <!--  Resize grid to be inserted here  -->
                            <Border BorderBrush="Gray" BorderThickness="1">
                                <Grid x:Name="resizeGrid">
                                    <Border
                                        Margin="5,22,5,5"
                                        BorderBrush="{DynamicResource WindowBorder}"
                                        BorderThickness="1" />
                                    <Rectangle
                                        x:Name="top"
                                        Height="2"
                                        Margin="5,0,5,0"
                                        VerticalAlignment="Top"
                                        Fill="{DynamicResource RectangleBackGround}"
                                        Stroke="{x:Null}" />
                                    <Rectangle
                                        x:Name="bottom"
                                        Height="5"
                                        Margin="5,0,5,0"
                                        VerticalAlignment="Bottom"
                                        Fill="{DynamicResource RectangleBackGround}"
                                        Stroke="{x:Null}" />
                                    <Rectangle
                                        x:Name="left"
                                        Width="5"
                                        Margin="0,5,0,5"
                                        HorizontalAlignment="Left"
                                        Fill="{DynamicResource RectangleBackGround}"
                                        Stroke="{x:Null}" />
                                    <Rectangle
                                        x:Name="right"
                                        Width="5"
                                        Margin="0,5,0,5"
                                        HorizontalAlignment="Right"
                                        Fill="{DynamicResource RectangleBackGround}"
                                        Stroke="{x:Null}" />
                                    <Rectangle
                                        x:Name="bottomLeft"
                                        Width="5"
                                        Height="5"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Bottom"
                                        Fill="{DynamicResource RectangleBackGround}"
                                        Stroke="{x:Null}" />
                                    <Rectangle
                                        x:Name="bottomRight"
                                        Width="5"
                                        Height="5"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Bottom"
                                        Fill="{DynamicResource RectangleBackGround}"
                                        Stroke="{x:Null}" />
                                    <Rectangle
                                        x:Name="topRight"
                                        Width="5"
                                        Height="5"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Top"
                                        Fill="{DynamicResource RectangleBackGround}"
                                        Stroke="{x:Null}" />
                                    <Rectangle
                                        x:Name="topLeft"
                                        Width="5"
                                        Height="5"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Fill="{DynamicResource RectangleBackGround}"
                                        Stroke="{x:Null}" />
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Scrollbar Thumbs  -->
    <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="{DynamicResource ScrollBackground}" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border
                        x:Name="rectangle"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Margin="0,0,2,0"
                        Background="{DynamicResource ScrollBackground}"
                        CornerRadius="3"
                        Opacity="0.3"
                        SnapsToDevicePixels="True" />
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="rectangle"
                                        Storyboard.TargetProperty="Opacity"
                                        To="1"
                                        Duration="0:0:0.3" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="rectangle"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.3"
                                        Duration="0:0:0.3" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ScrollBars  -->
    <Style x:Key="ScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid
                        x:Name="Bg"
                        Background="Transparent"
                        SnapsToDevicePixels="true">
                        <Border Padding="0,4">
                            <Track
                                x:Name="PART_Track"
                                Width="8"
                                HorizontalAlignment="Center"
                                IsDirectionReversed="true"
                                IsEnabled="{TemplateBinding IsMouseOver}">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Opacity="0" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Opacity="0" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollThumbs}" />
                                </Track.Thumb>
                            </Track>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="MinHeight" Value="{Binding Height, RelativeSource={RelativeSource Self}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Track
                                    x:Name="PART_Track"
                                    Height="6"
                                    IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Opacity="0" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Opacity="0" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollThumbs}" />
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  ScrollViewer  -->
    <Style x:Key="ScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource ScrollBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="14" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="14" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter />
                        <ScrollBar
                            x:Name="PART_VerticalScrollBar"
                            Grid.Row="0"
                            Grid.Column="1"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            Style="{StaticResource ScrollBarStyle}"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                            Value="{TemplateBinding VerticalOffset}" />
                        <ScrollBar
                            x:Name="PART_HorizontalScrollBar"
                            Grid.Row="1"
                            Grid.Column="0"
                            MinHeight="0"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            Orientation="Horizontal"
                            Style="{StaticResource ScrollBarStyle}"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                            Value="{TemplateBinding HorizontalOffset}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
        <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="ItemsControl.ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsItemsHost="True" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <ScrollViewer
                        Padding="4"
                        CanContentScroll="True"
                        Focusable="False"
                        Style="{StaticResource ScrollViewerStyle}">
                        <ItemsPresenter HorizontalAlignment="Stretch" />
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonZoom" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform x:Name="transform" />
            </Setter.Value>
        </Setter>
        <Setter Property="Button.Effect">
            <Setter.Value>
                <DropShadowEffect
                    BlurRadius="5"
                    Direction="320"
                    Opacity="0.5"
                    ShadowDepth="3"
                    Color="{DynamicResource DepthColor}" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard Name="zoomIn">
                    <Storyboard>
                        <DoubleAnimation
                            Storyboard.TargetProperty="RenderTransform.ScaleX"
                            To="1.2"
                            Duration="00:00:00.25" />
                        <DoubleAnimation
                            Storyboard.TargetProperty="RenderTransform.ScaleY"
                            To="1.2"
                            Duration="00:00:00.25" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard Name="zoomOut">
                    <Storyboard>
                        <DoubleAnimation
                            Storyboard.TargetProperty="RenderTransform.ScaleX"
                            To="1"
                            Duration="00:00:00.25" />
                        <DoubleAnimation
                            Storyboard.TargetProperty="RenderTransform.ScaleY"
                            To="1"
                            Duration="00:00:00.25" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.23" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DragablzItemStyle" TargetType="{x:Type dragablz:DragablzItem}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource MaterialDesignFocusVisual}" />
        <Setter Property="Foreground" Value="{DynamicResource WindowForeground}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="dragablzTheme:MaterialDesignAssist.IndicatorBrush" Value="{DynamicResource SecondaryAccentBrush}" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="MinWidth" Value="80" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="TextBlock.FontWeight" Value="Medium" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dragablz:DragablzItem}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border
                            x:Name="borders"
                            Margin="-1,0,0,0"
                            Background="{TemplateBinding Background}"
                            BorderThickness="1,0,1,0">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                                    <GradientStop Offset="0.0" Color="Transparent" />
                                    <GradientStop Offset="0.3" Color="Black" />
                                    <GradientStop Offset="0.7" Color="Black" />
                                    <GradientStop Offset="1.0" Color="Transparent" />
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <dragablzTheme:Ripple VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter
                                        x:Name="contentPresenter"
                                        Margin="{TemplateBinding Control.Padding}"
                                        HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                        Content="{TemplateBinding ContentControl.Content}"
                                        ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                        ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                        Opacity=".87"
                                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                    <Thumb
                                        x:Name="PART_Thumb"
                                        Grid.Column="0"
                                        HorizontalAlignment="Stretch"
                                        VerticalContentAlignment="Stretch"
                                        Style="{DynamicResource MaterialDesignInvisibleThumbStyle}" />
                                    <Button
                                        Grid.Column="1"
                                        Command="{x:Static dragablz:TabablzControl.CloseItemCommand}"
                                        CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                        Style="{DynamicResource MaterialDesignCloseItemCommandButtonStyle}">
                                        <Button.Visibility>
                                            <MultiBinding Converter="{StaticResource ShowDefaultCloseButtonConverter}">
                                                <Binding Path="ShowDefaultCloseButton" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type dragablz:TabablzControl}}" />
                                                <Binding Path="FixedHeaderCount" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type dragablz:TabablzControl}}" />
                                                <Binding Path="LogicalIndex" RelativeSource="{RelativeSource TemplatedParent}" />
                                            </MultiBinding>
                                        </Button.Visibility>
                                    </Button>
                                </Grid>
                            </dragablzTheme:Ripple>
                        </Border>
                        <Border
                            x:Name="SelectionHighlightBorder"
                            Grid.Row="1"
                            Height="2"
                            Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(dragablzTheme:MaterialDesignAssist.IndicatorBrush)}"
                            Visibility="Hidden" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="dragablz:TabablzControl.IsWrappingTabItem" Value="True">
                            <Setter TargetName="contentPresenter" Property="Content" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext.Header}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="1" />
                            <Setter TargetName="SelectionHighlightBorder" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource MaterialDesignTabablzControlStyle}" TargetType="{x:Type dragablz:TabablzControl}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource DragablzItemStyle}" />
    </Style>

    <Style BasedOn="{StaticResource MaterialDesignDataGrid}" TargetType="{x:Type DataGrid}">
        <Style.Resources>
            <Style BasedOn="{StaticResource ScrollBarStyle}" TargetType="ScrollBar" />
            <Style TargetType="DataGridRow">
                <Setter Property="Foreground" Value="{DynamicResource DataGridForeground}" />
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{DynamicResource DataGridRowSelected}" />
                    </Trigger>
                    <Trigger Property="IsSelected" Value="False">
                        <Setter Property="Background" Value="{DynamicResource DataGridBackground}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style BasedOn="{StaticResource MaterialDesignDataGridCell}" TargetType="DataGridCell">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridForeground}" />
                <Setter Property="BorderThickness" Value="0" />
                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsSelected" Value="True" />
                            <Condition Property="Selector.IsSelectionActive" Value="False" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Background" Value="Transparent" />
                    </MultiTrigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsSelected" Value="True" />
                            <Condition Property="Selector.IsSelectionActive" Value="True" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Background" Value="Transparent" />
                    </MultiTrigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value=".56" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                <Setter Property="Background" Value="{DynamicResource DataGridBackground}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridForeground}" />
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" TextWrapping="Wrap" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource DataGridRowSelected}" />
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="False">
                        <Setter Property="Foreground" Value="{DynamicResource DataGridForeground}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource MaterialDesignValidationErrorTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Click">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InteractionEllipse" Storyboard.TargetProperty="(FrameworkElement.Width)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="48" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InteractionEllipse" Storyboard.TargetProperty="(FrameworkElement.Height)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="48" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InteractionEllipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-24" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InteractionEllipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-24" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InteractionEllipse" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid
                        x:Name="templateRoot"
                        Background="Transparent"
                        SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Viewbox
                            Width="18"
                            Height="18"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            FlowDirection="LeftToRight">
                            <Canvas Width="24" Height="24">
                                <Path
                                    x:Name="Graphic"
                                    Data="M19,3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3M19,5V19H5V5H19Z"
                                    Fill="{DynamicResource WindowForeground}" />
                                <Ellipse
                                    x:Name="InteractionEllipse"
                                    Canvas.Left="12"
                                    Canvas.Top="12"
                                    Width="0"
                                    Height="0"
                                    Fill="{TemplateBinding Foreground}"
                                    IsHitTestVisible="False"
                                    Opacity="0"
                                    RenderTransformOrigin="0.5,0.5">
                                    <Ellipse.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                            </Canvas>
                        </Viewbox>
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Grid.Column="1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="ButtonBase.Click">
                            <BeginStoryboard Storyboard="{StaticResource Click}" />
                        </EventTrigger>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                            <Setter Property="Padding" Value="4,2,0,0" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true" />
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Graphic" Property="Data" Value="M10,17L5,12L6.41,10.58L10,14.17L17.59,6.58L19,8M19,3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3Z" />
                            <Setter TargetName="Graphic" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Graphic" Property="Fill" Value="{DynamicResource MaterialDesignCheckBoxDisabled}" />
                            <Setter Property="Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="Graphic" Property="Data" Value="M6,13L6,11L18,11L18,13M19,3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3Z" />
                            <Setter TargetName="Graphic" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}" />
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter TargetName="Graphic" Property="Fill" Value="{DynamicResource ValidationErrorBrush}" />
                            <Setter TargetName="contentPresenter" Property="Control.Foreground" Value="{DynamicResource ValidationErrorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GridSplitterPreview">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Fill="{DynamicResource WindowForeground}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type GridSplitter}">
        <Setter Property="Background" Value="{DynamicResource GridSplitterBackground}" />
        <Setter Property="PreviewStyle" Value="{StaticResource GridSplitterPreview}" />
        <Setter Property="Opacity" Value=".56" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridSplitter}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="MouseEnter">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.56" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="MouseExit">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.56" />
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.56" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="MouseExit_BeginStoryboard" Storyboard="{StaticResource MouseExit}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="MouseEnter_BeginStoryboard" Storyboard="{StaticResource MouseEnter}" />
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
